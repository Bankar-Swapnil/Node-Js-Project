extends base.pug

block scripts  
    //- script(src="/static/index.js")
    script(src=" ../static/prism.js")   

block style 
    style 
        include ../static/base.css
        include ../static/main.css
        include prism.css 

block content
    div.com1
        img(id="jslogo" src="../static/img/jslog.png", alt="")
        h1 Java Script Cheatsheet
    div.com
        div#sec1 
            ol 
                li On page script
                    pre.language-js  
                        code 
                            | &lt;script type="text/javascript">  ...&lt;/script>



                li Include external JS file
                    pre.language-js  
                        code 
                            | &lt;script src="filename.js">&lt;/script>

                li Delay - 1 second timeout
                    pre.language-js  
                        code 
                            | setTimeout(function () {

                            | }, 1000);
                            
                li Functions
                    pre.language-js  
                        code 
                            | function addNumbers(a, b) {
                            | return a + b; ;
                            | }
                            | x = addNumbers(1, 2);

                li Edit DOM element
                    pre.language-js  
                        code 
                            | document.getElementById("elementID").innerHTML = "Hello World!";

                li Output
                    pre.language-js  
                        code 
                            | console.log(a); 

                li Comments
                    pre.language-js  
                        code 
                            | /* Multi line
                            | comment */
                            | // One line

                li For Loop
                    pre.language-js  
                        code 
                            | for (var i = 0; i < 10; i++) {
                            | document.write(i + ": " + i*3 + "<br />");
                            | }

                li While Loop
                    pre.language-js  
                        code 
                            | var i = 1;                      // initialize
                            | while (i < 100) {               // enters the cycle if statement is true
                            | i *= 2;                     // increment to avoid infinite loop
                            | document.write(i + ", ");   // output
                            | }

                li Do While Loop
                    pre.language-js  
                        code 
                            | var i = 1;                      // initialize
                            | do {                            // enters cycle at least once
                            | i *= 2;                     // increment to avoid infinite loop
                            | document.write(i + ", ");   // output
                            | } while (i &lt; 100) 


                li Break
                    pre.language-js  
                        code 
                            | for (var i = 0; i < 10; i++) {
                            | if (i == 5) { break; }          // stops and exits the cycle
                            | document.write(i + ", ");       // last output number is 4
                            | }

                li Continue
                    pre.language-js  
                        code 
                            | for (var i = 0; i < 10; i++) {
                            | if (i == 5) { continue; }       // skips the rest of the cycle
                            | document.write(i + ", ");       // skips 5
                            | }

                li If - Else
                    pre.language-js  
                        code 
                            | if ((age >= 14) && (age < 19)) {        // logical condition
                            | status = "Eligible.";               // executed if condition is true
                            | } else {                                // else block is optional
                            | status = "Not eligible.";           // executed if condition is false
                            | }

                li Switch Statement

                    pre.language-js  
                        code 
                            | switch (new Date().getDay()) {      // input is current day
                            | case 6:                         // if (day == 6)
                            | 	text = "Saturday";          
                            | 	break;
                            | case 0:                         // if (day == 0)
                            | 	text = "Sunday";
                            | 	break;
                            | default:                        // else...
                            | 	text = "Whatever";
                            | } 

                li Strict mode
                    pre.language-js  
                        code 
                            | "use strict";   // Use strict mode to write secure code
                            | x = 1; 
                li Values
                    pre.language-js  
                        code 
                            | false, true                     // boolean
                            | 18, 3.14, 0b10011, 0xF6, NaN    // number
                            | "flower", 'John'                // string
                            | undefined, null , Infinity      // special


                li Operators
                    pre.language-js  
                        code 
                            | a = b + c - d;      // addition, substraction
                            | a = b * (c / d);    // multiplication, division
                            | x = 100 % 48;       // modulo. 100 / 48 remainder = 4
                            | a++; b--;           // postfix increment and decrement

                li Errors
                    pre.language-js  
                        code 
                            | try {                           // block of code to try
                            | undefinedFunction();
                            | }
                            | catch(err) {                    // block to handle errors
                            | console.log(err.message);
                            | }

                li Throw error
                    pre.language-js  
                        code 
                            | throw "My error message";    // throw a text

                li Input validation
                    pre.language-js  
                        code 
                            | var x = document.getElementById("mynum").value; // get input value
                            | try { 
                            | if(x == "")  throw "empty";                 // error cases
                            | if(isNaN(x)) throw "not a number";
                            | x = Number(x);
                            | if(x > 10)   throw "too high";
                            | }
                            | catch(err) {                                    // if there's an error
                            | document.write("Input is " + err);          // output error
                            | console.error(err);                         // write the error in console
                            | }
                            | finally {
                            | document.write("</br />Done");              // executed regardless of the try / catch result
                            | }

                